---

- debug: msg="Start of HealthShare/Caché install"

# Create users and groups
- name: Create default cache group
  group: name={{ hs_cache_group }} state=present
  
- name: Create default cache manager group
  group: name={{ hs_cachemgr_group }} state=present

- name: Create default cache user
  user: name={{ hs_cache_usr }} comment="cacheusr" group={{ hs_cache_group }}

- name: Create default cache system users
  user: name={{ hs_cache_usr_sys }} comment="cache system usr" group={{ hs_cachemgr_group }}


# Copy distribution Files

- name: Create full Caché install temp directory
  file: path={{ common_install_base_path }}/{{ hs_install_unpack_path }}
        mode=0777
        state=directory       


# Check whether file has been untar'ed already

- name: Check tar file (gunzipped already) does not exist
  stat: path={{ common_install_base_path }}/{{ hs_distribution_file }}.tar
  register: hs_tar_file
  

- name: Copy Caché/hs install file
  copy: src={{ common_path_to_distribution_files_Cache }}/{{ hs_distribution_file }}.tar.gz 
        dest={{ common_install_base_path }}/{{ hs_distribution_file }}.tar.gz 
  when: not hs_tar_file.stat.exists
      
      
# uncompress and untar

- name: un zip Caché folder
  command: gunzip {{ common_install_base_path }}/{{ hs_distribution_file }}.tar.gz 
  args:
   chdir: "{{ common_install_base_path }}"
   creates: "{{ hs_distribution_file }}.tar"
 
      
- name: un tar Caché install
  command: tar -xvf {{ common_install_base_path }}/{{ hs_distribution_file }}.tar
  args:
   chdir: "{{ common_install_base_path }}/{{ hs_install_unpack_path }}"
   creates: "{{ common_install_base_path }}/{{ hs_install_unpack_path }}/cinstall"
               
    
# ### Alternative   
#- name: Unarchive install file
#  unarchive: 
#    src={{ common_install_base_path }}/{{ hs_distribution_file }}.tar.gz  
#    dest={{ common_install_base_path }}/{{ hs_install_unpack_path }}.tar.gz 
#    copy=yes 
#    mode=0777
#    creates="{{ common_install_base_path }}/{{ hs_install_unpack_path }}/cinstall"


# Install Caché

- name: Create hs install directory
  file: path={{ ISC_PACKAGE_INSTALLDIR }} state=directory


# File for Web server Caché CSP directives

- name: touch ztrak.conf.
  command: touch "{{ hs_ztrak_conf_location }}"
  args:
    creates: "{{ hs_ztrak_conf_location }}" 


# Process install file - Note this uses the included Jinja2 filters

- name: Process parameters file
  template: 
    src="{{ hs_parameterfile_name_rh64 }}"
    dest="{{ common_install_base_path }}"


#### Example unattended install using parameters file to show how ansible templates files can be used.
# (see ./roles/hs_server_common/templates/parameters_hs20152_rh64.isc). 
# A parameters file is useful when you want to install and configure Caché and use CSPGateway with a web server other than the Caché internal Apache version. 
# Note: yes is a unix command outputs an affirmative response, or a user-defined string of text continuously until killed
# Its shown here because installing with a parameters file requires a user response to go ahead. 

#- name: Unattended install of hs/Cache from parameters file 
#  shell: yes '' | {{ hs_parameterfile_location_hs2015 }} {{ common_install_base_path }}/{{ hs_parameterfile_name_rh64 }}
#  when: ansible_os_family == 'RedHat'
#  args:
#    creates: "{{ ISC_PACKAGE_INSTALLDIR }}/cinstall.log"  
  
  
- name: unattended install of hs/Cache using cinstall_silent
  shell: >
    ISC_PACKAGE_INSTANCENAME="{{ ISC_PACKAGE_INSTANCENAME }}" 
    ISC_PACKAGE_INSTALLDIR="{{ ISC_PACKAGE_INSTALLDIR }}" 
    ISC_PACKAGE_UNICODE="{{ ISC_PACKAGE_UNICODE }}" 
    ISC_PACKAGE_INITIAL_SECURITY="{{ ISC_PACKAGE_INITIAL_SECURITY }}" 
    ISC_PACKAGE_MGRUSER="{{ ISC_PACKAGE_MGRUSER }}" 
    ISC_PACKAGE_MGRGROUP="{{ ISC_PACKAGE_MGRGROUP }}" 
    ISC_PACKAGE_USER_PASSWORD="{{ ISC_PACKAGE_USER_PASSWORD }}" 
    ISC_PACKAGE_CACHEUSER="{{ ISC_PACKAGE_CACHEUSER }}" 
    ISC_PACKAGE_CACHEGROUP="{{ ISC_PACKAGE_CACHEGROUP }}" ./cinstall_silent
    chdir="{{ common_install_base_path }}/{{ hs_install_unpack_path }}" 
  args:
    creates: "{{ ISC_PACKAGE_INSTALLDIR }}/cinstall.log"   
  
  
# Copy key now. Note healthshare not started until after tasks finished
    
- name: copy hs key
  copy: src="{{ common_path_to_distribution_files_Cache }}/cache.key" dest="{{ ISC_PACKAGE_INSTALLDIR }}/mgr"
  notify: restart Cache
  
   
- name: Set default hs instance
  command: "ccontrol default {{ ISC_PACKAGE_INSTANCENAME }}"   
  

- name: restart apache to initialize CSP.ini file
  service: 
    name:  httpd
    state: restarted
    

    

